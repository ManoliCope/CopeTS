@model ProjectX.Entities.Models.Production.ProductionPolicy
@{
	Layout = null;
	int bencount = 1;
}
<!DOCTYPE html>
<html>
<head>
	<style>
		body {
			font-family: Arial, sans-serif;
			margin: 0px;
			padding: 0px;
			/*padding-top: 80px;*/
			/*border:2px solid red;*/
			/*margin: 5px;*/
		}

		.underlined {
			display: inline-block;
			border-bottom: 1px solid;
			margin-bottom: 3px;
		}

		.underlined-heading {
			/*display: inline-block;*/
			border-bottom: 1px solid;
			margin-bottom: 3px;
		}

		h1.mainheader {
			text-align: center;
		}

		h2 {
			margin-bottom: 5px;
		}

		table {
			border-collapse: collapse;
			width: 100%;
			margin-bottom: 20px;
			/*border: 0px solid #dddddd;*/
		}

		.benefitidv tr td {
			line-height: 0.8
		}

		.benefitidv table {
			border-collapse: collapse;
			border: 1px solid #999;
			width: 100%;
		}

			.benefitidv table th, benefitidv table td {
				border: 1px solid #999;
				padding: 8px;
			}

		th, td {
			/*border: 0px solid #dddddd;*/
			padding: 4px;
			text-align: left;
		}

			td, td label {
				font-size: 15px
			}

		.td15 {
			width: 15%;
			min-width: 15%;
			max-width: 15%;
		}

		.td25 {
			width: 25%;
			min-width: 25%;
			max-width: 25%;
		}

		.td33 {
			width: 33%;
			min-width: 33%;
			max-width: 33%;
		}


		.td35 {
			width: 35%;
			min-width: 35%;
			max-width: 35%;
		}

		.td40 {
			width: 40%;
			min-width: 40%;
			max-width: 40%;
		}

		.td45 {
			width: 45%;
			min-width: 45%;
			max-width: 45%;
		}

		.td50 {
			width: 50%;
			min-width: 50%;
			max-width: 50%;
		}

		.td65 {
			width: 65%;
			min-width: 65%;
			max-width: 65%;
			line-height: 0.2
		}

		.td70 {
			width: 70%;
			min-width: 70%;
			max-width: 70%;
		}

		.td75 {
			width: 75%;
			min-width: 75%;
			max-width: 75%;
		}


		th {
			/*background-color: #f2f2f2;*/
		}

		p {
			margin-bottom: 20px;
		}

		.clearfix::after {
			content: "";
			display: table;
			clear: both;
		}

		.headertitle span {
			font-weight: bold;
		}

		.headertitle label {
			font-weight: 400;
		}


		.container {
			padding-left: 10px;
			padding-right: 10px;
			background-color: white;
			min-height: 1230px;
			height: 1230px;
			max-height: 1230px;
			margin-left: 50px;
			margin-right: 50px;
			border: 2px solid transparent;
			background: transparent;
			padding-top: 100px;
		}

		.box-container {
			display: flex;
			justify-content: space-between;
			margin-top: 20px;
		}

		.box {
			width: 150px;
			height: 60px;
			border: 1px solid #dddddd;
			padding: 10px;
		}

			.box label {
				display: block;
				text-align: center;
				margin-bottom: 50px;
			}

		.printheader, .printfooter {
			width: 100%;
			height: 80px
		}

		.benefitidv {
			/*height: 500px*/
		}


		.header {
			top: 0;
			left: 0;
			right: 0;
			height: 80px;
			width: 80%;
		}


		.footer {
			bottom: 0;
			width: 100%;
			color: white;
			text-align: center;
		}

		body, html {
			height: 100%;
			margin: 0;
			padding: 0;
		}

		.page {
			position: relative;
			height: 100vh;
			margin: 0;
		}

		.background-image {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			z-index: -1;
			background-size: cover;
			background-position: center;
		}

			.background-image img {
				height: 1395px;
			}


		.benefitidv table tr:first-child td:first-child {
			width: 70%;
		}

		.benefitidv table tr:first-child td:nth-child(2) {
			width: 30%;
		}
	</style>
</head>
<body>
	<div class="page">
		<div class="background-image">
			<img src="data:image/jpeg;base64,@Model.Layout" alt="Header" />
		</div>

		<div class="container" style="">
			<div class="headertitle">

				<h1 class="mainheader ">Travel Insurance Certificate</h1>

				<div style="width: 33.33%; float: left;">
					<span>
						Agent Name: <label id="agentName">@Model.CreatedBy</label>
					</span>
				</div>
				<div style="width: 33.33%; float: left; text-align:center">
					<span>
						Policy N.: <label id="policyNumber">@Model.Reference</label>
					</span>
				</div>
				<div style="width: 33.33%; float: left; text-align:right">
					<span>
						Issuing Date: <label id="issuingDate">@Model.CreatedOn.ToString("dd-MM-yyyy")</label>
					</span>
				</div>
				<div style="clear: both;"></div>
			</div>

			<h2 class="underlined-heading">Policy Information:</h2>
			<table>
				<caption></caption>
				<tr>
					<td class="td25"><label for="productChosen">Product Chosen:</label></td>
					<td class="td25"><label id="productChosen">@Model.ProductName</label></td>
					<td class="td25"><label for="zoneChosen">Zone Chosen:</label></td>
					<td class="td25"><label id="zoneChosen">@Model.ZoneName</label></td>
				</tr>
				<tr>
					<td class="td25"><label for="inceptionDate">Inception Date:</label></td>
					<td class="td25"><label id="inceptionDate">@Model.FromDate.ToString("dd-MM-yyyy")</label></td>
					<td class="td25"><label for="destinations">Destinations:</label></td>
					<td class="td25"><label id="destinations">@string.Join(", ", Model.Destinations.Select(d => d.DestinationName))</label></td>

				</tr>
				<tr>
					<td class="td25"><label for="expiryDate">Expiry Date:</label></td>
					<td class="td25"><label id="expiryDate">@Model.ToDate.ToString("dd-MM-yyyy")</label></td>
					@if (Model.IsFamily)
					{
						<td class="td25"><label for="excessDeductible">Excess/Deductible:</label></td>
						<td class="td25"><label id="excessDeductible">@(Model.PolicyDetails.First().Deductible ? "Included":"Not Included") </label></td>
					}
				</tr>
				<tr>
					<td class="td25"><label for="duration">Duration:</label></td>
					<td class="td25"><label id="duration">@Model.Duration Days</label></td>
					@if (Model.IsFamily)
					{
						<td class="td25"><label for="sportsActivities">Sports Activities:</label></td>
						<td class="td25"><label id="sportsActivities">@(Model.PolicyDetails.First().SportsActivities ? "Included":"Not Included") </label></td>
					}
				</tr>
			</table>






			@*@foreach (var beneficiary in Model.PolicyDetails)
				{

					<h2 class="underlined-heading">Beneficiary: <span style="padding-left:10px">@bencount.ToString("D2")</span></h2>
					<table>
						<tr>
							<td class="td25"><label for="firstName">First Name:</label></td>
							<td class="td25"><label id="firstName">@beneficiary.FirstName</label></td>
							<td class="td25"><label for="residenceCountry">Country of Residence:</label></td>
							<td class="td25"><label id="residenceCountry">@beneficiary.CountryResidence</label></td>
						</tr>
						<tr>
							<td class="td25"><label for="middleName">Middle Name:</label></td>
							<td class="td25"><label id="middleName">@beneficiary.MiddleName</label></td>
							<td class="td25"><label for="nationality">Nationality:</label></td>
							<td class="td25"><label id="nationality">@beneficiary.Nationality</label></td>
						</tr>
						<tr>
							<td class="td25"><label for="lastName">Last Name:</label></td>
							<td class="td25"><label id="lastName">@beneficiary.LastName</label></td>
							<td class="td25"><label for="passportNumber">Passport N.:</label></td>
							<td class="td25"><label id="passportNumber">@beneficiary.PassportNo</label></td>
						</tr>
						<tr>
							<td class="td25"><label for="dateOfBirth">Date of Birth:</label></td>
							<td class="td25"><label id="dateOfBirth">@beneficiary.DateOfBirth.ToString("dd-MM-yyyy")</label></td>
							<td class="td25"><label for="age">Age:</label></td>
							<td class="td25"><label id="age">@beneficiary.Age</label></td>
						</tr>
					</table>

					bencount++;
				}*@


			<div class="benefitidv">
				<h2>Table of Benefits:</h2>
				<table border="1" style="width:100%">
					<caption></caption>
					<tr>
						<th class="td35">Benefits</th>
						<th class="td15">Limits</th>
						<th class="td35">Benefits</th>
						<th class="td15">Limits</th>
					</tr>

					@for (var i = 0; i < Model.Benefits.Count; i += 2)
					{
						<tr>
							<td class="td35">@Model.Benefits[i].B_Title</td>
							<td class="td15">@Model.Benefits[i].B_Limit</td>
							@if (i + 1 < Model.Benefits.Count)
							{
								<td class="td35">@Model.Benefits[i + 1].B_Title</td>
								<td class="td15">@Model.Benefits[i + 1].B_Limit</td>
							}
							else
							{
								<td class="td35"></td>
								<td class="td15"></td>
							}
						</tr>
					}

					@foreach (var group in Model.AdditionalBenefits.GroupBy(ab => new { ab.AB_ID, ab.Price, ab.Name }))
					{
						<tr>
							<td class="td35">AB - @group.First().Name</td>
							<td class="td15">@group.First().Price</td>
						</tr>
					}

				</table>
			</div>


			<p>For more specific coverage, please refer to the terms and conditions attached with this certificate.</p>

			@if (Model.prttyp == 2)
			{
				<h2 class="underlined-heading">Premium Information:</h2>
				<table>
					<thead>
						<tr>
							<th>Premium: <span style="padding-left:30px">As Agreed </span></th>
							<th></th>
						</tr>
					</thead>
				</table>
			}
			else if (Model.prttyp == 1)
			{
				<h2 class="underlined-heading">Premium Information:</h2>
				<table style="width:600px">
					<thead>
						<tr>
							<th></th>
							<th>USD</th>
							@if (Model.CurrencyRate.CurrencySymbol != "USD")
							{
								<th>@Model.CurrencyRate.CurrencySymbol</th>
							}
						</tr>
					</thead>
					<tbody>
						@if (Model.StampsValue > 0 || Model.TaxVATValue > 0)
						{
							<tr>
								<td class="td33">Premium:</td>
								<td class="td33">@(Model.InitialPremium + Model.AdditionalValue)</td>
								@if (Model.CurrencyRate.CurrencySymbol != "USD")
								{
									<td class="td33">
										@String.Format("{0:0.00}", (Model.InitialPremium + Model.AdditionalValue) * Convert.ToDecimal(Model.CurrencyRate.Rate))
									</td>
								}

							</tr>
						}
						@if (Model.StampsValue > 0)
						{
							<tr>
								<td class="td33">Stamps / Insurance Tax:</td>
								<td class="td33">@Model.StampsValue</td>
								@if (Model.CurrencyRate.CurrencySymbol != "USD")
								{
									<td class="td33">
										@String.Format("{0:0.00}", Model.StampsValue * Convert.ToDecimal(Model.CurrencyRate.Rate))
									</td>
								}
							</tr>
						}
						@if (Model.TaxVATValue > 0)
						{

							<tr>
								<td class="td33">VAT:</td>
								<td class="td33">@Model.TaxVATValue</td>
								@if (Model.CurrencyRate.CurrencySymbol != "USD")
								{
									<td class="td33">
										@String.Format("{0:0.00}", Model.TaxVATValue * Convert.ToDecimal(Model.CurrencyRate.Rate))
									</td>
								}
							</tr>
						}
						<tr>
							<td class="td33">Total Premium:</td>
							<td class="td33">@Model.GrandTotal</td>
							@if (Model.CurrencyRate.CurrencySymbol != "USD")
							{
								<td class="td33">
									@String.Format("{0:0.00}", Model.GrandTotal * Convert.ToDecimal(Model.CurrencyRate.Rate))
								</td>
							}
						</tr>
					</tbody>
				</table>
			}
			<div class="box-container">
				<div class="boxholder" style="float:right;padding-right:15px">
					<label>Signature</label>
					<div>
						@if (Model.Signature != "")
						{
							<img width="120" height="120" src="data:image/jpeg;base64,@Model.Signature" alt="Signature" />
						}
					</div>
				</div>
				<div class="boxholder" style="float:left">
					<div>
						<img width="120" height="120" src="data:image/jpeg;base64,@Model.QrCodebit" alt="QR Code" />
					</div>
				</div>
			</div>
		</div>





		@*<div class="footer">
				<img  class="printfooter" src="data:image/jpeg;base64,@Model.Footer" alt="Footer" />
			</div>*@
	</div>
</body>
</html>
