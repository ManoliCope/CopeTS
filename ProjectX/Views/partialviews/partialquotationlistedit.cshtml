
@model ProjectX.Entities.Models.Production.ProductionPolicy

@{
	Layout = null;
	var benefitlist = ViewData["benefitlist"] as List<ProjectX.Entities.dbModels.TR_Benefit>;
	var DestinationNames = string.Join(",", Model.Destinations.Select(d => d.DestinationName));
	var UserRights = ViewData["userrights"] as ProjectX.Entities.Models.Users.UserRights;
	var is_admin = ViewData["isAdmin"] as string;
	var showbenefits = "";
	if (benefitlist != null && benefitlist.Count> 0 && (Model.AdditionalBenefits.Count>0 || (UserRights.Is_Admin == true || Model.IsEditable)))
	{
		showbenefits = "";
	}
	else
		showbenefits = "hidden";
}


<div class="card mt-2 mb-0">
	<div class="card-body @(!Model.IsEditable ? "no-click":"")" style="font-size:13px">
		<div>
			<b>Destination(s) edit</b>
			<span class="float-end dest">@DestinationNames</span>
		</div>
		<div>
			<b>Inception Date</b>
			<span class="float-end incdate">@Model.FromDate.ToString("dd-MM-yyyy")</span>
		</div>
		<div>
			<b>Expiry Date</b>
			<span class="float-end expdate">@Model.ToDate.ToString("dd-MM-yyyy")</span>
		</div>
		<div>
			<b>Duration</b>
			<span class="float-end duration">@Model.Duration Days</span>
		</div>
		<div>
			<span class="float-end total_price" data-currency="USD"></span>
		</div>



		<div class="my-3 mb-1">
			@foreach (var item in Model.PolicyDetails)
			{
				<table class="table table-bordered mt-3 quoatetable insured@(item.Insured)" ins="@item.InsuredId" thisrow="@item.Insured">
					<tbody>
						<tr class="card-header">
							<td>Full Name</td>
							<td colspan="2"> @item.FirstName @item.LastName</td>
						</tr>
						<tr>
							<td>Plan</td>
							<td colspan="2">
								<select class="form-control plans">
								@*<option value="@item..Plan" data-plan="@item.Plan">
										@item.PlanName
									</option>*@

								<option value="@item.Plan" data-plan="@item.Plan"
										data-insured="@item.Insured"
										data-price="@item.TariffPrice"
										data-tariffid="@item.Tariff">
									@item.PlanName
								</option>
								</select>
							</td>
						</tr>

						<tr class="@showbenefits">
							<td>Additional Benefits</td>
							<td colspan="2">
								<select class="form-control isselect2 benplus" multiple>
								@foreach (var thislist in Model.AdditionalBenefits.Where(x => x.Insuredid == item.InsuredId))
								{
									<option data-benprice="@thislist.Price" value="@thislist.AB_ID" selected>
										@thislist.Name: @thislist.Price USD
									</option>
								}

								@*adding tariff benefits with price that are not save into this policy*@
								@foreach (var thislist in benefitlist)
								{
									var test = Model.AdditionalBenefits.Where(x => x.Insuredid == item.InsuredId).ToList();
									bool benefitExists = Model.AdditionalBenefits.Any(ab => ab.Insuredid == item.InsuredId && ab.AB_ID == thislist.B_Id);

									if (thislist.TariffId == item.Tariff && !benefitExists)
									{
										<option data-benprice = "@thislist.B_Benfees" value = "@thislist.B_Id">
										@thislist.B_Title: @thislist.B_Benfees USD
										</option>
									}
								}
								</select>
							</td>
						</tr>
						<tr>
							<td>
								Remove Deductible<br />(USD<span data-dedprice="@item.DeductiblePrice"> @item.DeductiblePrice</span>)
								<input type="checkbox" name="name" data-dedprice="@item.DeductiblePrice" class="ml-2" @(item.Deductible ? "checked" : "" ) />
							</td>
							<td>
								Add Sports Activities<br />(USD<span data-sportsprice="@item.SportsActivitiesPrice"> @item.SportsActivitiesPrice</span>)
								<input type="checkbox" name="name" data-sportsprice="@item.SportsActivitiesPrice" class="ml-2" @(item.SportsActivities ? "checked" : "" ) />
							</td>
							<td>
								Price(USD) <br />
								<span class="planprice" data-bprice="@item.PlanPrice"> @item.PlanPrice</span>
							</td>
						</tr>
						<tr class="@((UserRights.Is_Admin ==true)? "":"hidden")">
							<td>
							</td>
							<td>
								Discount(USD) <br />
								<input id="discount" type="number" class="form-control discount" name="discount" step="0.01" autocomplete="off" value="@item.Discount" @((UserRights.Is_Admin == true) ? "" : "readonly")>
							</td>
							<td>
								Final(USD) <br />
								<span id="finalprice" class="finalprice" data-fprice="@item.FinalPrice"> @item.FinalPrice</span>
							</td>
						</tr>
					</tbody>

				</table>
			}



			<table class= "table table-bordered  mt-3 totaltable">
			<tbody>
			<tr>
			<td> Initial Premium </td>
			<td id = "initpremtotal" class= "text-end"> @Model.InitialPremium USD </td>
			<td id = "initpremtotalforeign" class= "text-end">
			@String.Format("{0:0.00}", Model.InitialPremium * Convert.ToDecimal(Model.CurrencyRate.Rate)) @Model.CurrencyRate.CurrencySymbol
			</td>
			</tr>
			<tr>
			<td> Additional </td>
			<td class= "text-end">
			<input type = "number" id = "additiononprem" name = "additiononprem" step = "0.01" class= "borderless-input" value = "@Model.AdditionalValue">
			</td>
			<td id = "additiononpremforeign" class= "text-end"> @String.Format("{0:0.00}", Model.AdditionalValue * Convert.ToDecimal(Model.CurrencyRate.Rate)) @Model.CurrencyRate.CurrencySymbol </td>
			</tr>
			<tr>
			<td> Tax / VAT </td>
			<td id = "taxvat" class= "text-end" vt = "@Convert.ToDecimal(UserRights.VAT)"> @Model.TaxVATValue USD </td>
			<td id = "taxvatforeign" class= "text-end" vt = "@Convert.ToDecimal(UserRights.VAT)"> @String.Format("{0:0.00}", Model.TaxVATValue * Convert.ToDecimal(Model.CurrencyRate.Rate)) @Model.CurrencyRate.CurrencySymbol </td>
			</tr>
			<tr>
			<td> Stamps </td>
			<td id = "stamps" class= "text-end" st = "@Convert.ToDecimal(UserRights.Stamp)"> @Model.StampsValue USD </td>
			<td id = "stampsforeign" class= "text-end" st = "@Convert.ToDecimal(UserRights.Stamp)"> @String.Format("{0:0.00}", Model.StampsValue * Convert.ToDecimal(Model.CurrencyRate.Rate)) @Model.CurrencyRate.CurrencySymbol </td>
			</tr>
			<tr>
			<td> Total </td>
			<td id = "grandtotal" class= "text-end"> @Model.GrandTotal USD </td>
			<td id = "grandtotalforeign" class= "text-end">
			@*@(Model.GrandTotal * Convert.ToDecimal(Model.CurrencyRate.Rate))*@
			@String.Format("{0:0.00}", Model.GrandTotal * Convert.ToDecimal(Model.CurrencyRate.Rate)) @Model.CurrencyRate.CurrencySymbol
			</td>
			</tr>
			</tbody>
			</table>
		</div>
	</div>
</div>

@if (!Model.IsCanceled)
{
	@if ((Model.IsEditable) || is_admin == "True")
	{
		<button id="sendButton" class="mt-3 w-100 btn btn-md btn-primary btn-submit">Save/Update</button>
	}

	<button id="printButton" class="mt-3 w-100 btn btn-md btn-primary btn-submit">Print</button>
}

