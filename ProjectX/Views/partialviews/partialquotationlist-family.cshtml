@model ProjectX.Entities.Models.Production.ProductionResp
@{
	Layout = null;
	var UserRights = ViewData["userrights"] as ProjectX.Entities.Models.Users.UserRights;
	var CreatedByUserRights = ViewData["CreatedByuserrights"] as ProjectX.Entities.Models.Users.UserRights;

	var hidepremium = "";
	if (UserRights.Hide_Premium_Info == true)
		hidepremium = "hidden";

	var previewtotalonly = "";
	if (UserRights.Preview_Total_Only == true)
		previewtotalonly = "hidden";

	int isnew = (int)ViewData["isnew"];
}


<div class="Quotationcard card mt-2 mb-0">
	<div class="card-body" style="font-size:13px">
		<div>
			<b>Destination(s)</b>
			<span class="float-end dest">@Model.QuotationResp.First().ZoneName</span>
		</div>
		<div>
			<b>Inception Date</b>
			<span class="float-end incdate">@Model.QuotationResp.First().TariffStartingDate.ToString("dd-MM-yyyy")</span>
		</div>
		<div>
			<b>Expiry Date</b>
			<span class="float-end expdate">@Model.QuotationResp.First().TariffStartingDate.ToString("dd-MM-yyyy")</span>
		</div>
		<div>
			<b>Duration</b>
			<span class="float-end duration">@Model.QuotationResp.First().Duration Days</span>
		</div>
		<div>
			<span class="float-end total_price" data-currency="USD"></span>
		</div>



		<div class="my-3 mb-1">
			<div class="benlist">
				<ul>
					<li>
						<b class="inscnt" inscnt="@Model.QuotationResp.Count">Beneficiaries (@Model.QuotationResp.Where(x => x.RowId == 1).ToList().Count)</b>
					</li>
					@for (int i = 0; i < Model.QuotationResp.Where(x => x.RowId == 1).ToList().Count; i++)
					{
						<li insid="@Model.QuotationResp.Where(x=>x.RowId == 1).ToList()[i].InsuredId">
							@Model.QuotationResp.Where(x => x.RowId == 1).ToList()[i].Fullname - @Model.QuotationResp.Where(x => x.RowId == 1).ToList()[i].InsuredId
						</li>
					}
					@if ((Model.QuotationResp.Where(x => x.RowId == 1).ToList().Count + 1) % 3 != 0)
					{
						// Add empty placeholders to make it a multiple of 3
						int emptyCount = 3 - ((Model.QuotationResp.Where(x => x.RowId == 1).ToList().Count + 1) % 3);
						for (int j = 0; j < emptyCount; j++)
						{
							<li></li>
						}
					}

				</ul>
			</div>


			<table class="table table-bordered mt-3 quoatetable insured@(Model.QuotationResp.Where(x => x.RowId == 1).First().Insured)" ins="@Model.QuotationResp.Where(x => x.RowId == 1).First().InsuredId" thisrow="@Model.QuotationResp.Where(x => x.RowId == 1).First().Insured">
				<tbody>
					<tr>
						<td>Plan</td>
						<td colspan="2">
							<select class="form-control plans">
								@foreach (var thislist in Model.QuotationResp.Where(x => x.Insured == Model.QuotationResp.Where(x => x.RowId == 1).First().Insured))
								{
									@*<option value="@thislist.Plan" data-bprice="@thislist.PriceAmount" data-fprice="@thislist.PriceAmount" data-price0="@thislist.PriceAmount" data-deductible="@thislist.PriceAmount">
											@thislist.PlanName
										</option>*@

									<option value="@thislist.Plan" data-plan="@thislist.Plan"
											data-price="@thislist.PriceAmount"
											data-deductible="@thislist.DeductibleFee"
											data-insured="@thislist.Insured"
											data-age="@thislist.Age"
											data-product="@thislist.Product"
											data-package="@thislist.Package"
											data-duration="@thislist.Duration"
											data-tariffid="@thislist.TariffID"
											data-numberofdays="@thislist.NumberOfDays"
											data-netpremiumamount="@thislist.NetPremiumAmount"
											data-paamount="@thislist.PAAmount"
											data-overrideamount="@thislist.OverrideAmount"
											data-deductiblefee="@thislist.DeductibleFee"
											data-sportactivitiesfee="@thislist.SportAcitiviesFee">
										@thislist.PlanName
									</option>
								}
							</select>
						</td>
					</tr>
					<tr class="@((Model.AdditionalBenefits != null && Model.AdditionalBenefits.Count > 0) ? "" : "hidden")">
						<td>Additional Benefits</td>
						<td colspan="2">
							<select class="form-control isselect2 benplus" multiple>
								@if (Model.AdditionalBenefits != null)
									@foreach (var thislist in Model.AdditionalBenefits.Where(x => x.P_Id == Model.QuotationResp.Where(x => x.RowId == 1).First().Package && x.TariffId == Model.QuotationResp.Where(x => x.RowId == 1).First().TariffID))
									{
										<option data-benprice="@thislist.B_Benfees" value="@thislist.B_Id">
											@thislist.B_Title: @thislist.B_Benfees USD
										</option>
									}

							</select>
						</td>
					</tr>
					<tr>
						<td>
							Remove Deductible <br /> (USD <span data-dedprice="@Model.QuotationResp.Where(x => x.RowId == 1).First().DeductibleFee">@Model.QuotationResp.Where(x => x.RowId == 1).First().DeductibleFee</span>)
							<input type="checkbox" name="name" data-dedprice="@Model.QuotationResp.Where(x => x.RowId == 1).First().DeductibleFee" class="ml-2" />
						</td>
						<td>
							Add Sports Activities <br /> (USD <span data-sportsprice="@Model.QuotationResp.Where(x => x.RowId == 1).First().SportAcitiviesFee">@Model.QuotationResp.Where(x => x.RowId == 1).First().SportAcitiviesFee</span>)
							<input type="checkbox" name="name" data-sportsprice="@Model.QuotationResp.Where(x => x.RowId == 1).First().SportAcitiviesFee" class="ml-2" />
						</td>
						<td>
							Price (USD)	<br />
							<span class="planprice" data-bprice="@Model.QuotationResp.Where(x => x.RowId == 1).First().PriceAmount"> @Model.QuotationResp.Where(x => x.RowId == 1).First().PriceAmount</span>
						</td>
					</tr>
					<tr class="@((UserRights.Is_Admin == true) ? "" : "hidden")">
						<td>
						</td>
						<td>
							Discount (USD) <br />
							<input id="discount" type="number" class="form-control discount" name="discount" step="0.01" autocomplete="off" @((UserRights.Is_Admin == true) ? "" : "readonly")>
						</td>
						<td>
							Final (USD) <br />
							<span id="finalprice" class="finalprice" data-fprice="@Model.QuotationResp.Where(x => x.RowId == 1).First().PriceAmount"> @Model.QuotationResp.Where(x => x.RowId == 1).First().PriceAmount</span>
						</td>
					</tr>
				</tbody>

			</table>


			<table class="table table-bordered  mt-3 totaltable @hidepremium">
				<tbody>
					<tr class="@previewtotalonly">
						<td>Initial Premium</td>
						<td id="initpremtotal" class="text-end">@Model.QuotationResp.Where(x => x.RowId == 1).First().PriceAmount USD</td>
						@if (CreatedByUserRights.CurrencySymbol != "USD")
						{
							<td id="initpremtotalforeign" class="text-end">@(Model.QuotationResp.Where(x => x.RowId == 1).First().PriceAmount * CreatedByUserRights.CurrencyRate) @CreatedByUserRights.CurrencySymbol</td>
						}
					</tr>
					<tr class="@previewtotalonly">
						<td>Additional @(CreatedByUserRights.Max_Additional_Fees>0 ? "(Max: " + CreatedByUserRights.Max_Additional_Fees + ")" : "")</td>
						<td class="text-end">
							<input type="number" id="additiononprem" name="additiononprem" step="0.01" class="borderless-input" max="@CreatedByUserRights.Max_Additional_Fees" value="0.00" oninput="handlemax(this)">
						</td>
						@if (CreatedByUserRights.CurrencySymbol != "USD")
						{
							<td id="additiononpremforeign" class="text-end">0.00 @CreatedByUserRights.CurrencySymbol</td>
						}
					</tr>


					<tr class="@previewtotalonly">
						<td>Tax/VAT</td>
						@if (CreatedByUserRights.Tax_Type == 1)
						{
							<td id="taxvat" class="text-end" txtp="@CreatedByUserRights.Tax_Type" vt="@Convert.ToDecimal((CreatedByUserRights.VAT ?? 0) + (CreatedByUserRights.Tax ?? 0))">
								@Model.QuotationResp.Where(x => x.RowId == 1).Sum(x => x.PriceAmount * (Convert.ToDecimal((CreatedByUserRights.VAT ?? 0) + (CreatedByUserRights.Tax ?? 0)) / 100)) USD
							</td>

							@if (CreatedByUserRights.CurrencySymbol != "USD")
							{
								<td id="taxvatforeign" class="text-end" tx="@(CreatedByUserRights.Tax ?? 0)" vt="@Convert.ToDecimal((CreatedByUserRights.VAT ?? 0) + (CreatedByUserRights.Tax ?? 0))">
									@Model.QuotationResp.Where(x => x.RowId == 1).Sum(x => x.PriceAmount * CreatedByUserRights.CurrencyRate * (Convert.ToDecimal((CreatedByUserRights.VAT ?? 0) + (CreatedByUserRights.Tax ?? 0)) / 100)) @CreatedByUserRights.CurrencySymbol
								</td>
							}

						}
						else
						{
							<td id="taxvat" class="text-end" txtp="@CreatedByUserRights.Tax_Type" tx="@(CreatedByUserRights.Tax ?? 0)" vt="@Convert.ToDecimal(CreatedByUserRights.VAT ?? 0)">
								@Model.QuotationResp.Where(x => x.RowId == 1).Sum(x => Convert.ToDecimal(CreatedByUserRights.Tax ?? 0) + (x.PriceAmount * (Convert.ToDecimal(CreatedByUserRights.VAT ?? 0) / 100))) USD
							</td>

							@if (CreatedByUserRights.CurrencySymbol != "USD")
							{
								<td id="taxvatforeign" class="text-end" tx="@(CreatedByUserRights.Tax ?? 0)" vt="@Convert.ToDecimal((CreatedByUserRights.VAT ?? 0) + (CreatedByUserRights.Tax ?? 0))">
									@Model.QuotationResp.Where(x => x.RowId == 1).Sum(x => CreatedByUserRights.CurrencyRate * (Convert.ToDecimal(CreatedByUserRights.Tax ?? 0) + (x.PriceAmount * (Convert.ToDecimal(CreatedByUserRights.VAT ?? 0) / 100)))) @CreatedByUserRights.CurrencySymbol
								</td>
							}
						}
					</tr>


					<tr class="@previewtotalonly">
						<td>Stamps</td>
						<td id="stamps" class="text-end" st="@Convert.ToDecimal(CreatedByUserRights.Stamp)">@(Model.QuotationResp.Where(x => x.RowId == 1).First().PriceAmount * (Convert.ToDecimal(CreatedByUserRights.Stamp) / 100)) USD</td>
						@if (CreatedByUserRights.CurrencySymbol != "USD")
						{
							<td id="stampsforeign" class="text-end" st="@Convert.ToDecimal(CreatedByUserRights.Stamp)">@(Model.QuotationResp.Where(x => x.RowId == 1).First().PriceAmount * CreatedByUserRights.CurrencyRate * (Convert.ToDecimal(CreatedByUserRights.Stamp) / 100)) @CreatedByUserRights.CurrencySymbol</td>
						}
					</tr>
					<tr>
						<td>Total</td>
						<td id="grandtotal" class="text-end">@(Model.QuotationResp.Where(x => x.RowId == 1).First().PriceAmount) USD</td>
						@if (CreatedByUserRights.CurrencySymbol != "USD")
						{
							<td id="grandtotalforeign" class="text-end">@(Model.QuotationResp.Where(x => x.RowId == 1).First().PriceAmount * CreatedByUserRights.CurrencyRate) @CreatedByUserRights.CurrencySymbol</td>
						}
					</tr>
				</tbody>
			</table>


			@*<div class="btn btn-third float-end grand_total">Grand Total<span class="pl-4">14.00 USD</span></div>*@
			@*<div class="btn btn-third float-right mr-2">Grand Total</div>*@
		</div>



		@*<div class="table-responsive">
				<table class="table table-sm table-bordered mt-3">
					<thead>
						<tr class="thead-light text-center">
							<th>Full Name</th>
							<th>Plan</th>
							<th>Price</th>
							<th>Discount</th>
							<th>Final Price</th>
						</tr>
					</thead>
					<tbody class="quotation-list">
						@foreach (var item in Model.Where(x => x.RowId == 1))
						{
							<tr class="text-center">
								<td>@item.Insured</td>

								<td>
									<select class="form-control cum_con_days">
										@foreach (var thislist in Model.Where(x => x.Insured == item.Insured))
										{
											<option value="@thislist.Plan" data-bprice="@thislist.PriceAmount" data-fprice="@thislist.PriceAmount" data-price0="@thislist.PriceAmount" data-deductible="@thislist.PriceAmount">
												@thislist.PlanName
											</option>
										}

									</select>
								</td>

								<td>@item.PriceAmount USD</td>
								<td>@item.PriceAmount USD</td>
								<td>@item.NetPremiumAmount USD</td>
							</tr>
						}

					</tbody>
				</table>
			</div>*@
	</div>
</div>

@if (isnew == 1)
{
	<button id="sendButton" class="mt-3 w-100 btn btn-md btn-primary btn-submit">Issue Certificate</button>
}
else
{
	<button id="sendButton" class="mt-3 w-100 btn btn-md btn-primary btn-submit">Save/Update</button>
}